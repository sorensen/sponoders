
//- Main application
script#application-template(type='text/template')
  .wrapper
    #header
      ul#breadcrumbs
        li.iconic.home: a#home Loopon
        li: span
      iframe#vote(src='http://nodeknockout.com/iframe/sponoders', frameborder=0, scrolling='no', allowtransparency=true, width=115, height=25)
    #sidebar
      ul#quicklaunch
        li.selected: a#rooms(href='#/'): span Rooms
        li: a#create-room(href='#/create-room'): span New Room
        li: a#settings(href='#/settings'): span Profile
        //li: a#credits(href='#/credits'): span Credits
        //li: a#library: span Library
        //li: a#beats: span Beats
        li: a#login(accesskey='L', href='/login'): span Login
        li: a#register(accesskey='L', href='/register'): span Signup
        li: a#logout(accesskey='L', href='/logout'): span Logout
      //#logged-in
    #main-wrapper
      #main-content
    #user-list
    #room-list
    #track-list
    #beat-list
    #footer
     p.nko
       span NKO 2011
     p.authors
       span Beau Sorensen, Nick Baugh, Jacob Chapel
     p.stack
       span DNode
       span Backbone
       span Mongoose
       span Backbone-DNode
       span Node.js

  #spinner
    #inner-spinner
  #overlay
  .dialog-wrapper#create-room-dialog

//- Logged in User
script#main-user(type='text/template')
  span.avatar {{ avatar }}
  span.username {{ username }}
  span: a#logout(href='/logout') Logout

//- Home page
script#home-template(type='text/template')
    #message_wrapper
      #message
        .container
          p You haven't joined a room yet
          span Select a room to join or create your own.
        a.button#create-room(href='#/create-room', accesskey='C') Create a new room

//- Application statistics
script#application-stats-template(type='text/template')
  .stat.total-online
    span.title Online
    span.value {{ totalOnline }}
  .stat.total-users
    span.title Members
    span.value {{ totalUsers }}
  .stat.total-rooms
    span.title Rooms
    span.value {{ totalRooms }}
  .stat.version
    span.title Version
    span.value {{ version }}

//- Single message
script#message-list-template(type='text/template')
script#message-template(type='text/template')
  span.small-avatar: img(src='{{ avatar }}')
  span.username {{ displayName }}
  span.data {{ text }}
  abbr.created.timeago(title='{{ created }}') {{ created }}

//- User listing
script#user-list-template(type='text/template')
  a(href='/#/users/{{ slug }}')
    h3.name
      span.username {{ username }}

//- User profile
script#user-template(type='text/template')

//- Track
script#track-template(type='text/template')
  .grid
  .controls
    .play
    .pause
    .stop
    .mute

//- Track line item
script#track-line-template(type='text/template')
  .row
    .column(col='1')
    .column(col='2')
    .column(col='3')
    .column(col='4')
    .column(col='5')
    .column(col='6')
    .column(col='7')

//- Beat
script#beat-template(type='text/template')
  .beat-controls
    .remove X
  .name {{ name }}

//- Library
script#library-template(type='text/template')
  .lib
    {{#sounds}}
    .sound(class='{{ type }}')
      .sound-controls
        .playSound(style="display:none;") Play
      .name {{ name }}
      .type {{ type }}
    {{/sounds}}


//- Room
script#room-template(type='text/template')
  .title
    h3 {{ name }}
    .room-description {{ description }}

    //.controls
    //  .icon#add-favorite(title='Add to Favorites', accesskey='W')&nbsp;
    //  .icon#remove-favorite(title='Remove from Favorites', accesskey='Q')&nbsp;
    //  .icon#leave-room(title='Leave Room', accesskey='X')&nbsp;
    //  .admin-controls
    //    button.delete-room.delete Delete Room
  .statistics.room-stats
  .track-wrapper
    .track
  .users
  .extras
    .controls
      button#show-library Library
      button#show-chat Chat
    .library
    .chat
      .messages
      .message-form
        .icon#message-submit(title='Send Message')
        span.input-wrap
          input.create-message(type='text', name='message', placeholder='Say something...', length='255', accesskey='I')

//- Room listing
script#room-list-template(type='text/template')
  a(href='/#/rooms/{{ slug }}')
    h3.name(title='{{ description }}')
      span {{ name }}
      span.destroy
    p.description {{ description }}
  .statistics.room-stats

//- Room statistics
script#room-stats-template(type='text/template')
  .stat.total-messages
    span.title Messages
    span.value {{ totalMessages }}

//- Settings template
script#settings-template(type='text/template')
  #settings-form
    .title
      h3 Settings
    .content
      p.dialog
        label(for='settings-username') ID:
        span.input-wrap
          input#settings-id(type='text', name='id', disabled='disabled', value='{{ _id }}')
      p.dialog
        label(for='settings-username') Username:
        span.input-wrap
          input#settings-username(type='text', name='username', disabled='disabled', value='{{ username }}')
      //p.dialog
      //  label(for='settings-displayname') Display Name:
      //  span.input-wrap
      //    input#settings-displayname(type='text', name='displayname', value='{{ displayName }}')
      p.dialog
        label(for='settings-email') Email:
        span.input-wrap
          input#settings-email(type='text', name='email', value='{{ email }}')
      //p.dialog.description
      //  label(for='settings-bio') Bio:
      //  span.input-wrap
      //    textarea#settings-bio(name='bio', rows='3') {{ bio }}
      p.dialog
        label(for='settings-password') Password:
        span.input-wrap
          input#settings-password(type='password', name='password')
      //p.dialog
      //  label(for='settings-password-confirm') Repeat Password:
      //  span.input-wrap
      //    input#settings-password-confirm(type='password', name='password_confirm')
    .controls
      button.submit#settings-submit Save
      button.cancel Cancel

//- Create new room
script#create-room-template(type='text/template')
  #create-room-form
    .title
      h3 Create a new room
    .content
      p.dialog
        label(for='create-room-name') Name:
        span.input-wrap
          input#create-room-name(type='text', name='room', placeholder='Room name')
      p.dialog.description
        label(for='create-room-description') Description:
        span.input-wrap
          textarea#create-room-description(type='text', name='description', placeholder='Description')
    .controls
      button.submit#create-room-submit Create

